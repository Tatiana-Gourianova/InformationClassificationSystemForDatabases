
Разработка системы классификации информации для баз данных
==========================================================
Многопользовательская система, позволяющая добавлять информацию в единую базу данных разным пользователям.

Документация: https://drive.google.com/file/d/1XNmfB4Z8QOkV6h9C6W-Tm6je5A_ladSH/view?usp=sharing 
старые версии во время отладки:
https://youtu.be/_geNSxTmrbA
https://youtu.be/LEphokXVaS0?si=2BDmlMked3_iSlN2
https://youtu.be/4pLbGN87uvQ?si=dPdaixvy8znknUsd

Каждая единица представляет собой своего рода "сенсор" для измерения звукоизоляции (поскольку это
основная специфика заказчика)

Система позволяет добавлять нового пользователя, менять ему роль, добавлять и удалять новые роли, item-сенсоры, единицы измерения и типы сенсоров можно под ролью "Админ" - кнопка "Администратор"
Пример системы приведем на  двуязычном приложении (русский и английский), но, поскольку 
важно вносить информацию из разных источников, то по мере внесения информации предполагается добавлять как
языки (оператору ввода удобнее вносить информацию переключив версию на язык оригинала-источника ввода),
так и новые jsp странички, удобные для ввода именно этого типа справочника (протокола испытаний,....).
Так в приложении добавлена специальная страничка, позволяющаая вносить в бд материалы из INSUL Materials Editor/


По умалчанию новому пользователю добавляется роль viewer: с ней можно только просматривать сенсоры.
Логин и пароль админа root 123ttt(совпадает с паролем для общей базы данных, но его можно поменять в обоих местах).
Есть немного излишнего кода: если придется доделывать, то может понадобиться
 
A. Чтобы задиплоить проект на azure:
выбрать линукс JavaEE, Tomcat и MySQL + читать докуменцацию (есть на русском) за пользование sql-сервером там прилично денег снимают

 B. Чтобы задиплоить проект на виртуальной машине (ip+пароль + админ права для установки ПО можно найти за 10 долл в месяц ) : через putty установить Tomcat и MySQL + документация 
 https://www.digitalocean.com/community/tutorials/install-tomcat-9-ubuntu-1804
 
https://www.digitalocean.com/community/tutorials/mysql-ubuntu-18-04-ru
 
 C. Чтобы развернуть проект на локальном хосте: 
 
 Скачать  IntelliJ IDEA Ultimate, MySQL сервер, Workbench и Connector J, Tomcat, Java jdk (1.8), настроить path
Запустить MySQL  Workbench под админом root и паролем 123ttt (или поменять данные в проекте в configuration.properties)
В БД IntelliJ IDEA (или в Workbench) создать БД MySQL, импортировать sql-скрипт *.sql
В Edit Configurations  IntelliJ IDEA добавить Tomcat -> Run

Приложение намеренно написано на Java Core 1.8, поскольку развернуть Spring на Azure и пользоваться им 
в настоящее время требует затрат на его содержания в разы больше, с одной стороны, с другой в документации
Microsoft уже появился (для core) открытый код, который позволяет упростить развертывание системы
на виртуальной машине (что позволит тоже в разы сократить затраты на девопса)

Приложение можно менять под наполнение ориентируясь по конкретному источнику. Это позвлит не запутаться в большом количестве полей ввода, с одной стороны, с другой, сохранить информацию, которая не существенна на данном
этапе: гораздо разумнее собрать информации чуть больше, чем требуется, сделать выборку того, что важно на данный момент, а "не нужные" на данном этапе характеристике могут очень пригодиться: например, открывают более эффективный способ расчета звукоизоляции, который считается, учитывая именно эти критерии иди расчет звукоизоляции
нужен очень точный, или в приложении потребуется дописать функции, которые используют те характеристики, которые 
на сегодня не являются значимыми,...


Базу данных можно экспортировать в *.json формат для дальнейшей работы с нею

Система позволяет вводить информацию, а также осуществлять поиск через дружественный интерфейс, доступный через браузер (в частности, чтобы избежать дублирования информации: оператор вводит одну из существенных характеристик
и смотрит, нет ли такой единицы уже в системе либо админ проверяет таким образом дублирующуюся информацию)
